let mapleader = " "
inoremap jk <ESC>
set ignorecase smartcase hlsearch incsearch
set scrolloff=3
set showmode
set history=100000
set surround
set commentary
" set easymotion
set highlightedyank
set NERDTree
set exchange
set nu
set rnu
" set so=999
set idearefactormode=keep
set ideajoin

nmap <leader>no :NERDTree<CR>
nmap <leader>nc :NERDTree<CR> <esc> :NERDTreeClose<CR>
nmap <leader>nf :NERDTreeFind<CR>
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

" easy system clipboard copy/paste
nmap <leader>y "*y
nmap <leader>Y "*Y
nmap <leader>p "*p
nmap <leader>P "*P

" easy window navigation
nmap <c-l> <c-w>l
nmap <c-j> <c-w>j
nmap <c-h> <c-w>h
nmap <c-k> <c-w>k

nmap <a-h> gT
nmap <a-l> gt
nmap <S-tab> gT
nmap <tab> gt

vmap < <gv
vmap > >gv

nmap zc <Action>(CollapseRegion)
nmap zo <Action>(ExpandRegion)

" clear the search buffer when hitting return
nmap <ESC> :nohlsearch<cr>

" options
nmap cow <Action>(EditorToggleUseSoftWraps)
nmap col <Action>(EditorToggleShowWhitespaces)


nmap <leader>sh :split<cr>
nmap <leader>sv :vsplit<cr>
nmap <leader>sd <Action>(MoveTabDown)
nmap <leader>sr <Action>(MoveTabRight)
nmap <leader>ss <Action>(MoveEditorToOppositeTabGroup)
nmap <leader>stm <Action>(MaximizeEditorInSplit)

" actions
nmap <leader>q <Action>(CloseContent)
nmap <leader>Q <Action>(ReopenClosedTab)
nmap <leader>\ <Action>(VimFilePrevious)
nmap <leader>ff <Action>(SearchEverywhere)
nmap <leader>fs <Action>(FindInPath)
nmap <leader>E <Action>(Switcher)
nmap <leader>t <Action>(FileStructurePopup)
nmap <leader>T <Action>(GotoSymbol)
nmap <leader>a <Action>(GotoAction)
nmap <leader>b <Action>(ToggleLineBreakpoint)
nmap <leader>rrf <Action>(RenameFile)

" code navigation
nmap \e <Action>(GotoNextError)
nmap \E <Action>(GotoPreviousError)
nmap <leader>] <Action>(GotoImplementation)
nmap <leader>[ <Action>(GotoSuperMethod)
nmap <leader>u <Action>(FindUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>rt <Action>(TestTreePopupMenu)
nmap <leader>rf <Action>(RecentFiles)
nmap <leader>k <Action>(HighlightUsagesInFile)
nmap \r <Action>(RunClass)
nmap \R <Action>(Run)
nmap \d <Action>(DebugClass)
nmap \D <Action>(Debug)
nmap \c <Action>(CheckStyleCurrentFileAction)
map s <Action>(flash.search)

" bookmark
nmap <leader>bt <Action>(ToggleBookmark)
nmap ]b <Action>(GotoNextBookmark)
nmap [b <Action>(GotoPreviousBookmark)

" code refactoring
nmap <leader>rr <Action>(RenameElement)

nmap g; <Action>(JumpToLastChange)
nmap g, <Action>(JumpToNextChange)

" unimpaired mappings
nmap [<leader> O<esc>j
nmap ]<leader> o<esc>k
nmap [q <Action>(PreviousOccurence)
nmap ]q <Action>(NextOccurence)
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)

" GIT
nmap <leader>gm <Action>(Git.Menu)
nmap <leader>gb <Action>(Git.Branches)
nmap <leader>hr <Action>(Vcs.RollbackChangedLines)


" built-in navigation to navigated items works better
nmap <c-o> <Action>(Back)
nmap <c-i> <Action>(Forward)
" but preserve ideavim defaults
nmap g<c-o> <c-o>
nmap g<c-i> <c-i>

" built in search looks better
nmap g/ <Action>(Find)
" " but preserve ideavim search
" nnoremap / /

" Reload .ideavimrc
nmap <leader>R :source ~/.ideavimrc<CR>

nmap zC <Action>(CollapseRegionRecursively)
nmap zO <Action>(ExpandRegionRecursively)

nmap <leader>x <Action>(ActivateTerminalToolWindow)

nmap <leader>zz <Action>(ToggleDistractionFreeMode)
" vmap <leader>wz :<Backspace><Backspace><Backspace><Backspace><Backspace>action ToggleDistractionFreeMode<CR>

" Increase or decrease font size
nmap <C-=> <Action>(EditorIncreaseFontSize)
nmap <C--> <Action>(EditorDecreaseFontSize)
