"------------------------------------------------------------------------------"
"                                      set                                     "
"------------------------------------------------------------------------------"
set encoding=utf-8
set hidden
set nobackup
set nowritebackup
set cmdheight=2
set updatetime=300
set shortmess+=c
if has("patch-8.1.1564")
  set signcolumn=number
else
  set signcolumn=yes
endif
set relativenumber number
set smarttab
set cindent
set tabstop=2
set shiftwidth=2
set termguicolors
set expandtab
set ignorecase smartcase hlsearch incsearch
set showmode
set numberwidth=1
set virtualedit=block
set lazyredraw
set laststatus=2
set title
set ruler
set cursorline
syntax on
filetype plugin on

"------------------------------------------------------------------------------"
"                                    golang                                    "
"------------------------------------------------------------------------------"
let g:go_fmt_command = "goimports"


"------------------------------------------------------------------------------"
"                                 Theme and CoC                                "
"------------------------------------------------------------------------------"
let g:rainbow_active = 1

set t_Co=256
" set cursorline
" let g:airline_theme='onehalfdark'
" colorscheme onehalfdark
"
" if exists('+termguicolors')
"   let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
"   let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
"   set termguicolors
" endif

if (has('termguicolors'))
  set termguicolors
endif
let g:material_terminal_italics = 1
let g:material_theme_style = 'ocean'
colorscheme material

" let g:oceanic_next_terminal_bold = 1
" let g:oceanic_next_terminal_italic = 1
" colorscheme OceanicNext

hi Normal guibg=NONE ctermbg=NONE
hi LineNr guibg=NONE ctermbg=NONE
hi SignColumn guibg=NONE ctermbg=NONE
hi EndOfBuffer guibg=NONE ctermbg=NONE
"
" augroup SyntaxSettings
"     autocmd!
"     autocmd BufNewFile,BufRead *.tsx set filetype=typescript
" augroup END

if isdirectory('./node_modules') && isdirectory('./node_modules/prettier')
  let g:coc_global_extensions += ['coc-prettier']
endif

if isdirectory('./node_modules') && isdirectory('./node_modules/eslint')
  let g:coc_global_extensions += ['coc-eslint']
endif

"------------------------------------------------------------------------------"
"                                   Fugitive                                   "
"------------------------------------------------------------------------------"
let g:git_messenger_include_diff = "none" " here can be 'current' and 'all' values
let g:git_messenger_floating_win_opts = { 'border': 'single' }
" let g:git_messenger_popup_content_margins = v:false

"------------------------------------------------------------------------------"
"                                      Vue                                     "
"------------------------------------------------------------------------------"
" let g:vim_vue_plugin_load_full_syntax = 1
"
let g:vim_vue_plugin_config = { 
      \'syntax': {
      \   'template': ['html'],
      \   'script': ['javascript', 'typescript'],
      \   'style': ['scss', 'css'],
      \},
      \'full_syntax': ['scss', 'html', 'javascript', 'typescript'],
      \'initial_indent': ['script.javascript', 'script.typescript', 'style'],
      \'attribute': 1,
      \'keyword': 1,
      \}

" let g:vim_vue_plugin_config = { 
"       \'syntax': {
"       \   'template': ['html', 'pug'],
"       \   'script': ['javascript', 'typescript'],
"       \   'style': ['scss', 'sass'],
"       \   'i18n': ['json', 'yaml'],
"       \   'route': 'json',
"       \   'docs': 'markdown',
"       \   'page-query': 'graphql',
"       \},
"       \'full_syntax': ['scss', 'html', 'javascript', 'typescript'],
"       \'initial_indent': ['script.javascript', 'style', 'yaml'],
"       \'attribute': 1,
"       \'keyword': 1,
"       \}


"------------------------------------------------------------------------------"
"                                     Folds                                    "
"------------------------------------------------------------------------------"
" Keep all folds open when a file is opened
augroup OpenAllFoldsOnFileOpen
    autocmd!
    autocmd BufRead * normal zR
augroup END

"------------------------------------------------------------------------------"
"                                   Markdown                                   "
"------------------------------------------------------------------------------"
autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!
" disable header folding
let g:vim_markdown_folding_disabled = 1

" do not use conceal feature, the implementation is not so good
let g:vim_markdown_conceal = 0

" disable math tex conceal feature
let g:tex_conceal = ""
let g:vim_markdown_math = 1

" support front matter of various format
let g:vim_markdown_frontmatter = 1  " for YAML format
let g:vim_markdown_toml_frontmatter = 1  " for TOML format
let g:vim_markdown_json_frontmatter = 1  " for JSON format
augroup pandoc_syntax
    au! BufNewFile,BufFilePre,BufRead *.md set filetype=markdown.pandoc
augroup END
" do not close the preview tab when switching to other buffers
let g:mkdp_auto_close = 0

"------------------------------------------------------------------------------"
"                                     Netrw                                    "
"------------------------------------------------------------------------------"
let g:netrw_banner = 0


"------------------------------------------------------------------------------"
"                                   NERDTree                                   "
"------------------------------------------------------------------------------"
" let g:WebDevIconsNerdTreeBeforeGlyphPadding = ""
let g:NERDTreeGitStatusShowIgnored = 1
let g:NERDTreeGitStatusUseNerdFonts = 1
let g:NERDTreeGitStatusConcealBrackets = 0
let NERDTreeShowHidden = 1
let NERDTreeIgnore=['\.git$', '\.idea$', '\.vscode$', '\.history$']

if exists("g:loaded_webdevicons")
	call webdevicons#refresh()
endif


" If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.
" autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
"     \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif
